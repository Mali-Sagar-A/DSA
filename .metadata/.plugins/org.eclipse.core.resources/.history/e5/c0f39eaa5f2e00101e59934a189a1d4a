package queue;

public class IntQueue {
	private int arr[];
	private int front,rear;
	
	public IntQueue()
	{
		arr= new int[10];
		front=rear=-1;
	}
	public IntQueue(int s)
	{
		arr=new int[s];
		front=rear=-1;
	}
	public boolean isFull()
		
	{
		if(rear==arr.length-1)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	
	public boolean isEmpty()
	{
		if((front==-1)||(front-rear==1))
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	
	public void insert(int d)
	{
		if(isFull())
		{
			System.out.println("Overflow..");
			return;
		}
		if(front==-1)
		{
			front=0;
			rear=rear+1;
			arr[rear]=d;
			return;
		}
	}
	
	public int remove()
	{
		int d=-999;
		if(isEmpty())
		{
			System.out.println("UnderFlow");
			return d;
		}
		else
		{
			d=arr[front];
			front=front+1;
			return d;
		}
	}
	
	public void display()
	{
		if(isEmpty())
		{
			System.out.println("Empty Queue");
			
		}
		else
		{
			for(int i=0;i<arr.length;i++)
			{
				System.out.print(arr[i]+"  ");
			}
		}
	}
	
}
